<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\user\UserInterface;

function hello_cron() {
    \Drupal::messenger()->addMessage(t('Hello cron'));
}

function hello_user_login(UserInterface $account) {
    \Drupal::messenger()->addMessage(t('Welcome dear %name!', [
        '%name' => $account->getAccountName(),
    ]));

    $hello_stat_roles = \Drupal::configFactory()
      ->getEditable('hello.settings')
      ->get('hello_stat_roles')
    ;

    if (array_intersect($hello_stat_roles, $account->getRoles())) {
      // ajout du log de login
      \Drupal::database()->insert('hello_user_statistics')->fields([
          'time' => \Drupal::time()->getCurrentTime(),
          'uid' => $account->id(),
          'action' => 1,
      ])->execute();
    }
}

function hello_user_logout(AccountInterface $account) {
  $hello_stat_roles = \Drupal::configFactory()
    ->getEditable('hello.settings')
    ->get('hello_stat_roles')
  ;

  if (array_intersect($hello_stat_roles, $account->getRoles())) {
    // ajout du log de login
    \Drupal::database()->insert('hello_user_statistics')->fields([
      'time' => \Drupal::time()->getCurrentTime(),
      'uid' => $account->id(),
      'action' => 0,
    ])->execute();
  }
}

function hello_views_data() {
    $data = [];
    $data['hello_user_statistics'] = [];

    $data['hello_user_statistics']['table'] = [];

    $data['hello_user_statistics']['table']['group'] = t('Hello Statistics table');

    $data['hello_user_statistics']['table']['provider'] = 'hello';

    $data['hello_user_statistics']['table']['base'] = [
      'field' => 'id',
      'title' => t('Hello Statistics table'),
      'help' => t('Hello Statistics help.'),
      'weight' => -10,
    ];

    $data['hello_user_statistics']['uid'] = [
      'title' => t('User id'),
      'field' => [
        'id' => 'numeric',
      ],
      'sort' => [
        'id' => 'standard',
      ],
      'filter' => [
        'id' => 'numeric',
      ],
      'relationship' => [
        'base' => 'users_field_data',
        'base field' => 'uid',
        'id' => 'standard',
        'label' => t('Hello UID -> User UID'),
      ],
    ];

    $data['hello_user_statistics']['action'] = [
      'title' => t('Action id'),
      'field' => [
        'id' => 'numeric',
      ],
      'sort' => [
        'id' => 'standard',
      ],
      'filter' => [
        'id' => 'numeric',
      ],
      'argument' => [
        'id' => 'numeric',
      ],
    ];

    $data['hello_user_statistics']['time'] = [
      'title' => t('Timestamp of user action'),
      'field' => [
        'id' => 'date',
      ],
      'sort' => [
        'id' => 'date',
      ],
      'filter' => [
        'id' => 'date',
      ],
    ];

    return $data;
}

function hello_form_user_admin_settings_alter(
  array &$form,
  FormStateInterface $form_state,
  string $form_id
) {
  $roles = \Drupal::entityTypeManager()->getStorage('user_role')->loadMultiple();
  unset($roles['anonymous']);

  $options = [];
  foreach ($roles as $role) {
    $options[$role->id()] = $role->label();
  }

  $hello_stat_roles = \Drupal::configFactory()
    ->getEditable('hello.settings')
    ->get('hello_stat_roles')
  ;

  $form = array_merge([
    'hello_block' => [
      '#type' => 'details',
      '#title' => t('Roles for which to collect activity statistics'),
      '#open' => true,

      'hello_stat_roles' => [
        '#type' => 'checkboxes',
        '#options' => $options,
        '#default_value' => $hello_stat_roles,
      ],
    ],
  ], $form);

  $form['#submit'][] = 'hello_form_user_admin_settings_submit';
}

function hello_form_user_admin_settings_submit(
  array &$form,
  FormStateInterface $form_state
) {
  $hello_stat_roles = $form_state->getValue('hello_stat_roles');

  \Drupal::configFactory()
    ->getEditable('hello.settings')
    ->set('hello_stat_roles', $hello_stat_roles)
    ->save()
  ;
}
